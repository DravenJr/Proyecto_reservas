version: '3.8'

services:
  # RabbitMQ para mensajería asíncrona (opcional)
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"

  api_gateway:
    build: ./api_gateway
    ports:
      - "8080:8080"
    depends_on:
      - auth_service
      - roles_service
      - fields_service
      - bookings_service
      - admin_dashboard

  auth_service:
    build: ./auth_service
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DB=auth_service
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DB_HOST=auth_service_db
      - DB_PORT=5432
    depends_on:
      auth_service_db:
        condition: service_healthy
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000

  auth_service_db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auth_service
    volumes:
      - auth_service_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 10
      start_period: 5s

  roles_service:
    build: ./roles_service
    ports:
      - "8001:8000"
    environment:
      - POSTGRES_DB=roles_service
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DB_HOST=roles_service_db
      - DB_PORT=5432
    depends_on:
      roles_service_db:
        condition: service_healthy
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000

  roles_service_db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=roles_service
    volumes:
      - roles_service_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 10
      start_period: 5s

  fields_service:
    build: ./fields_service
    ports:
      - "8002:8000"
    environment:
      - POSTGRES_DB=fields_service
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DB_HOST=fields_service_db
      - DB_PORT=5432
    depends_on:
      fields_service_db:
        condition: service_healthy
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000

  fields_service_db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fields_service
    volumes:
      - fields_service_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 10
      start_period: 5s

  bookings_service:
    build: ./bookings_service
    ports:
      - "8003:8000"
    environment:
      - POSTGRES_DB=bookings_service
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DB_HOST=bookings_service_db
      - DB_PORT=5432
    depends_on:
      bookings_service_db:
        condition: service_healthy
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000

  bookings_service_db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=bookings_service
    volumes:
      - bookings_service_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 10
      start_period: 5s

  admin_dashboard:
    build: ./admin_dashboard
    ports:
      - "8004:8000"
    environment:
      - POSTGRES_DB=admin_dashboard
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DB_HOST=admin_dashboard_db
      - DB_PORT=5432
    depends_on:
      admin_dashboard_db:
        condition: service_healthy
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000

  admin_dashboard_db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=admin_dashboard
    volumes:
      - admin_dashboard_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 10
      start_period: 5s

volumes:
  auth_service_pgdata:
  roles_service_pgdata:
  fields_service_pgdata:
  bookings_service_pgdata:
  admin_dashboard_pgdata:
